####################

###Format proposé###

####################

#(USER)-[ :TWEETED]-(TWEET)

#(USER)-[ :RETWEETED]-(TWEET)

#(TWEET)-[CONTAIN]-(HASHTAG)



###Voir les tweet et retweets###

MATCH (n:TWEET) WHERE n.retweet="True" RETURN n



###Hashtags les plus utilisés###

MATCH (h:HASHTAG)-[c:CONTAIN]-(t:TWEET) RETURN DISTINCT h,count(c) ORDER BY count(c) DESC



###Shortpath between other users###


MATCH p= (n1:USER)-[*..6]-(n2:USER) WHERE n1.name='Apple' AND n2.name='EditorBriefings' RETURN min(length(p))


MATCH p= (n1:USER)-[*..4]-(n2:USER) WHERE n1.name='Apple' AND n2.name='EditorBriefings' RETURN p

#########################################################

###Création d'un graphe de connaissance complémentaire###

#########################################################

#(USER)-[:INFLUENCE]-(HASHTAG)




MATCH (u:USER)-[:RETWEETED]-(:TWEET)-[:CONTAIN]-(h:HASHTAG) MERGE (u)-[i:INFLUENCE]->(h) ON CREATE SET i.strength = 0 ON MATCH SET i.strength = coalesce(i.strength, 0) + 1

###Hashtag le plus influent###

MATCH p=(h:HASHTAG)-[i:INFLUENCE]-(u:USER) RETURN h, sum(i.strength) as compteur ORDER BY compteur DESC



###Hashtag le plus populaire###

MATCH p=(h:HASHTAG)-[i:INFLUENCE]-(u:USER) RETURN h, count(u) as compteur ORDER BY compteur DESC


